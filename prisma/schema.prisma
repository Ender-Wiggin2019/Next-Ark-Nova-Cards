// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Comment {
  id        Int      @id @default(autoincrement())
  cardId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  rating    Int
  title     String   @db.VarChar(255)
  content   String?
  published Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int

  @@index(authorId)
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  user   User    @relation(fields: [userId], references: [id])
  userId Int     @unique

  @@index(userId)
}

model User {
  id      Int      @id @default(autoincrement())
  email?   String   @unique
  name    String?
  comments   Comment[]
  animalCards   AnimalCard[]
  profile Profile?
}

model AnimalCard {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @db.VarChar(30)
  latinName String?  @db.VarChar(30)
  endangeredCategory String?  @db.VarChar(30)
  image String?  @db.VarChar(30)

  // upper
  size Int
  rock  Int?
  water  Int?
  price  Int
  requirements String?
  tags String?
  canBeInStandardEnclosure Boolean?
  specialEnclosures String? // SpecialEnclosure[];

  // middle
  abilities String?
  description String?
  reefDwellerEffect String?
  soloEffect String?
  wave Boolean?

  // bottom
  reputation Int?
  appeal Int?
  conservationPoint Int?

  // meta data
  source String
  published Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int

  @@index(authorId)
}
